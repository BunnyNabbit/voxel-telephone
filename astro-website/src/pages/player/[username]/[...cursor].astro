---
import { database } from "../../../shared/db.mjs";
import ContentPage from "../../../layouts/ContentPage.astro";
import { Image } from "astro:assets";
import Turn from "../../../components/Turn.astro";
import Timestamp from "../../../components/Timestamp.astro";
import { ObjectId } from "mongojs";
const username = Astro.params.username;
let cursor, nextCursor
if (Astro.params.cursor) {
	cursor = new ObjectId(Astro.params.cursor);
}
const userRecord = await database.getUserRecordDocument(username);
let title = username;
let userGrid = [];
if (!userRecord) {
	title = "Player not found";
	Astro.response.status = 404;
} else {
	if (userRecord.displayName) {
		title = userRecord.displayName;
	}
	userGrid = await database.getUserGrid(username, cursor);
	userGrid = userGrid.flat(1)
	if (userGrid.length == 65 * 2) {
		nextCursor = userGrid[userGrid.length - 3]._id;
		userGrid.pop();
		userGrid.pop();
	}
}
---

<ContentPage title={title} description={`Builds by ${username}`} canon={`/player/${username}`} ogImage={`https://www.classicube.net/face/${username}/`}>
	{
		userRecord ? (
			<Image src={`https://www.classicube.net/face/${username}/`} alt={`Head shot of ${username}`} width="128" height="128" />
			<p>First joined: <Timestamp date={userRecord.firstJoin} /></p>
		) : (
			<p>Player not found.</p>
		)
	}
	{
		userGrid.length > 0 ? (
			<h2>Builds</h2>
			<div class="flex-container ">
				{
					userGrid.map((turn: any, index: number) => {
						if (turn.promptType === "description") {
							return null;
						}
						return (
							<Turn description={userGrid[index - 1]} build={turn} rootId={turn.root} anchor={`#${turn.depth}`} />
						);
					})
				}
			</div>
		) : (
			<p></p>
		)
	}
	{
		nextCursor && (
			<a href={`/player/${username}/${nextCursor}`} class="pagination-button">
				Next Page
			</a>
		)
	}
</ContentPage>
