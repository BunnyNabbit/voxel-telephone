---
import { getCollection, render, getEntry } from "astro:content"
import ContentPage from "../../../../layouts/ContentPage.astro"
import { defaultLanguage } from "../../../../../../class/strings/FormattedString.mjs"
const locales = Object.keys(defaultLanguage.language)
export const prerender = true
export async function getStaticPaths() {
	const posts = await getCollection("help")
	const processed = posts
		.filter((post) => {
			return post.id.split("/").length == 2
		})
		.map((post) => {
			return {
				params: {
					id: post.id.split("/")[2],
					category: post.id.split("/")[1],
					language: post.id.split("/")[0],
				},
				props: { post },
			}
		})
	return processed
}
const { post } = Astro.props
const { category, language } = Astro.params
const { Content } = await render(post)

const localesAvailableHreflangs = (
	await Promise.all(
		locales.map(async (locale) => {
			if (locale === language) return null
			const entry = await getEntry("help", `${locale}/${category}`)
			if (!entry) return null
			return {
				locale,
				pathName: `/help/${locale}/${category}`,
			}
		})
	)
).filter(Boolean).concat([
	{ locale: "x-default", pathName: `/help/en/${category}` },
])

---

<ContentPage title={post.data.title} includeH1={false} description={post.data.summary} noIndex={post.data.noIndex} language={language} hreflangs={localesAvailableHreflangs}>
	<Content />
	<ul>
		{
			await getCollection("help").then((posts) => {
				return posts.map((post) => {
					if (post.id.includes(`${language}/${category}/`)) {
						return (
							<li>
									<a href={`./${category}/${post.id.split("/")[2]}`}>{post.data.title}</a> {post.data.summary}
							</li>
						)
					}
				})
			})
		}
	</ul>
	<p><a href=`../${language}`>Help index</a></p>
</ContentPage>
